{"ast":null,"code":"export async function graphQLFetch(query) {\n  let variables = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  try {\n    console.log(\"log variables\");\n    console.log('Bearer' + variables);\n    const response = await fetch('http://localhost:8081/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + variables\n      },\n      body: JSON.stringify({\n        query\n      })\n    });\n    const body = await response.text();\n    const result = JSON.parse(body); // console.log(`body is ${body}`)\n\n    if (result.errors) {\n      const error = result.errors[0];\n      alert(`${error.message}`);\n      return null;\n    }\n\n    return result.data;\n  } catch (e) {\n    alert(`Error in sending data to server: ${e.message}`);\n    return null;\n  }\n}","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive/cori_5007_project_v1/5007_project/frontend/src/helper/graphqlFetch.js"],"names":["graphQLFetch","query","variables","console","log","response","fetch","method","headers","body","JSON","stringify","text","result","parse","errors","error","alert","message","data","e"],"mappings":"AAAA,OACI,eAAeA,YAAf,CAA4BC,KAA5B,EAAmD;AAAA,MAAhBC,SAAgB,uEAAJ,EAAI;;AACnD,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWF,SAAvB;AACE,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkC;AAC5DC,MAAAA,MAAM,EAAE,MADoD;AAE5DC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,yBAAiB,YAAYN;AAFtB,OAFmD;AAM5DO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEV,QAAAA;AAAF,OAAf;AANsD,KAAlC,CAA5B;AAQA,UAAMQ,IAAI,GAAG,MAAMJ,QAAQ,CAACO,IAAT,EAAnB;AACA,UAAMC,MAAM,GAAGH,IAAI,CAACI,KAAL,CAAWL,IAAX,CAAf,CAZA,CAaH;;AAEG,QAAII,MAAM,CAACE,MAAX,EAAmB;AACjB,YAAMC,KAAK,GAAIH,MAAM,CAACE,MAAP,CAAc,CAAd,CAAf;AACAE,MAAAA,KAAK,CAAE,GAAED,KAAK,CAACE,OAAQ,EAAlB,CAAL;AACA,aAAO,IAAP;AACD;;AAED,WAAOL,MAAM,CAACM,IAAd;AACD,GAtBH,CAsBI,OAAOC,CAAP,EAAU;AACVH,IAAAA,KAAK,CAAE,oCAAmCG,CAAC,CAACF,OAAQ,EAA/C,CAAL;AACA,WAAO,IAAP;AACD;AACJ","sourcesContent":["export\r\n    async function graphQLFetch(query, variables = {}) {\r\n    try {\r\n      console.log(\"log variables\")\r\n      console.log('Bearer' + variables)\r\n        const response = await fetch('http://localhost:8081/graphql', {\r\n          method: 'POST',\r\n          headers: { \r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + variables\r\n          },\r\n          body: JSON.stringify({ query })\r\n        });\r\n        const body = await response.text();\r\n        const result = JSON.parse(body);\r\n     // console.log(`body is ${body}`)\r\n  \r\n        if (result.errors) {\r\n          const error  = result.errors[0]\r\n          alert(`${error.message}`);\r\n          return null\r\n        }\r\n        \r\n        return result.data;\r\n      } catch (e) {\r\n        alert(`Error in sending data to server: ${e.message}`);\r\n        return null;\r\n      }\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}