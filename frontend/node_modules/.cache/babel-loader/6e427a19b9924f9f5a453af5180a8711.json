{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\cori_5007_project_v1\\\\5007_project\\\\frontend\\\\src\\\\login.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function graphQLFetch(query) {\n  let variables = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  try {\n    const response = await fetch('http://localhost:8081/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query,\n        variables\n      })\n    });\n    const body = await response.text();\n    const result = JSON.parse(body);\n    console.log(`body is ${body}`);\n\n    if (result.errors) {\n      const error = result.errors[0];\n      alert(`${error.message}`);\n      return null;\n    }\n\n    return result.data;\n  } catch (e) {\n    alert(`Error in sending data to server: ${e.message}`);\n    return null;\n  }\n}\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    const form = document.forms.login;\n    const email = form.username.value;\n    const password = form.password.value;\n\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      alert(\"Email address and Password fields are compulsary.\");\n      return;\n    }\n\n    const query = `query {\n        login(email: \"${email}\", password: \"${password}\")  {\n        userId\n        token\n        tokenExpiration\n        }\n        }`;\n    const data = await graphQLFetch(query);\n    console.log(data.login);\n    form.username.value = \"\";\n    form.password.value = \"\"; //if (data!=\"existing account\"){alert(\"Account created\");}\n\n    this.props.set_user(email.trim());\n    this.props.change_to_main();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-root\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formbg\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"signInTitle\",\n          children: \"Sign in to your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          name: \"login\",\n          id: \"stripe-login\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              placeholder: \"Your Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"password\",\n              placeholder: \"Your Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              name: \"submit\",\n              value: \"Continue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-link\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"jump\",\n            onClick: this.props.jump,\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive/cori_5007_project_v1/5007_project/frontend/src/login.js"],"names":["React","graphQLFetch","query","variables","response","fetch","method","headers","body","JSON","stringify","text","result","parse","console","log","errors","error","alert","message","data","e","Login","Component","constructor","handleSubmit","bind","preventDefault","form","document","forms","login","email","username","value","password","trim","length","props","set_user","change_to_main","render","jump"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,eAAeC,YAAf,CAA4BC,KAA5B,EAAmD;AAAA,MAAhBC,SAAgB,uEAAJ,EAAI;;AAC/C,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkC;AAC5DC,MAAAA,MAAM,EAAE,MADoD;AAE5DC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFmD;AAG5DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAf;AAHsD,KAAlC,CAA5B;AAKA,UAAMK,IAAI,GAAG,MAAMJ,QAAQ,CAACO,IAAT,EAAnB;AACA,UAAMC,MAAM,GAAGH,IAAI,CAACI,KAAL,CAAWL,IAAX,CAAf;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAa,WAAUP,IAAK,EAA5B;;AAEA,QAAII,MAAM,CAACI,MAAX,EAAmB;AACjB,YAAMC,KAAK,GAAIL,MAAM,CAACI,MAAP,CAAc,CAAd,CAAf;AACAE,MAAAA,KAAK,CAAE,GAAED,KAAK,CAACE,OAAQ,EAAlB,CAAL;AACA,aAAO,IAAP;AACD;;AAED,WAAOP,MAAM,CAACQ,IAAd;AACD,GAjBH,CAiBI,OAAOC,CAAP,EAAU;AACVH,IAAAA,KAAK,CAAE,oCAAmCG,CAAC,CAACF,OAAQ,EAA/C,CAAL;AACA,WAAO,IAAP;AACD;AACJ;;AAEH,MAAMG,KAAN,SAAoBtB,KAAK,CAACuB,SAA1B,CAAmC;AAC/BC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEiB,QAAZD,YAAY,CAACJ,CAAD,EAAG;AACjBA,IAAAA,CAAC,CAACM,cAAF;AACA,UAAMC,IAAI,GAAGC,QAAQ,CAACC,KAAT,CAAeC,KAA5B;AACA,UAAMC,KAAK,GAAGJ,IAAI,CAACK,QAAL,CAAcC,KAA5B;AACA,UAAMC,QAAQ,GAAGP,IAAI,CAACO,QAAL,CAAcD,KAA/B;;AACA,QAAIF,KAAK,CAACI,IAAN,GAAaC,MAAb,KAAwB,CAAxB,IAA6BF,QAAQ,CAACC,IAAT,GAAgBC,MAAhB,KAA2B,CAA5D,EAA8D;AAC1DnB,MAAAA,KAAK,CAAC,mDAAD,CAAL;AACA;AACH;;AACD,UAAMhB,KAAK,GAAI;AACvB,wBAAwB8B,KAAM,iBAAgBG,QAAS;AACvD;AACA;AACA;AACA;AACA,UANQ;AAQA,UAAMf,IAAI,GAAG,MAAMnB,YAAY,CAACC,KAAD,CAA/B;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACW,KAAjB;AACAH,IAAAA,IAAI,CAACK,QAAL,CAAcC,KAAd,GAAsB,EAAtB;AAA0BN,IAAAA,IAAI,CAACO,QAAL,CAAcD,KAAd,GAAsB,EAAtB,CAnBT,CAoBjB;;AACA,SAAKI,KAAL,CAAWC,QAAX,CAAoBP,KAAK,CAACI,IAAN,EAApB;AACA,SAAKE,KAAL,CAAWE,cAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,IAAI,EAAE,OAAZ;AAAoB,UAAA,EAAE,EAAC,cAAvB;AAAsC,UAAA,QAAQ,EAAE,KAAKhB,YAArD;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,IAAI,EAAC,UAAxB;AAAmC,cAAA,WAAW,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,IAAI,EAAC,UAAxB;AAAmC,cAAA,WAAW,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eASI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACI;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,IAAI,EAAC,QAA1B;AAAmC,cAAA,KAAK,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAkBI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI;AAAA,6DAA6B;AAAQ,YAAA,SAAS,EAAC,MAAlB;AAAyB,YAAA,OAAO,EAAE,KAAKa,KAAL,CAAWI,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAyBH;;AAzD8B;;AA6DnC,eAAepB,KAAf","sourcesContent":["import React from \"react\";\r\n\r\nasync function graphQLFetch(query, variables = {}) {\r\n    try {\r\n        const response = await fetch('http://localhost:8081/graphql', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json'},\r\n          body: JSON.stringify({ query, variables })\r\n        });\r\n        const body = await response.text();\r\n        const result = JSON.parse(body);\r\n        console.log(`body is ${body}`)\r\n  \r\n        if (result.errors) {\r\n          const error  = result.errors[0]\r\n          alert(`${error.message}`);\r\n          return null\r\n        }\r\n        \r\n        return result.data;\r\n      } catch (e) {\r\n        alert(`Error in sending data to server: ${e.message}`);\r\n        return null;\r\n      }\r\n  }\r\n\r\nclass Login extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async handleSubmit(e){\r\n        e.preventDefault();\r\n        const form = document.forms.login;\r\n        const email = form.username.value;\r\n        const password = form.password.value;\r\n        if (email.trim().length === 0 || password.trim().length === 0){\r\n            alert(\"Email address and Password fields are compulsary.\")\r\n            return;\r\n        }\r\n        const query = `query {\r\n        login(email: \"${email}\", password: \"${password}\")  {\r\n        userId\r\n        token\r\n        tokenExpiration\r\n        }\r\n        }`;\r\n\r\n        const data = await graphQLFetch(query);\r\n        console.log(data.login)\r\n        form.username.value = \"\"; form.password.value = \"\";\r\n        //if (data!=\"existing account\"){alert(\"Account created\");}\r\n        this.props.set_user(email.trim())\r\n        this.props.change_to_main()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-root\">\r\n                <div className=\"formbg\">\r\n                    <span className=\"signInTitle\">Sign in to your account</span>\r\n                    <form name= \"login\" id=\"stripe-login\" onSubmit={this.handleSubmit}>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"email\">Name</label>\r\n                            <input type=\"text\" name=\"username\" placeholder=\"Your Email Address\"/>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"text\" name=\"password\" placeholder=\"Your Password\"/>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <input type=\"submit\" name=\"submit\" value=\"Continue\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"footer-link\">\r\n                    <span>Don't have an account? <button className=\"jump\" onClick={this.props.jump} >Create Account</button></span>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}