{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\cori_5007_project_v1\\\\5007_project\\\\frontend\\\\src\\\\WatchList.js\";\nimport React from \"react\";\nimport Movie_small from \"./Movie_small\";\nimport { graphQLFetch } from \"./helper/graphqlFetch.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass WatchList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: []\n    };\n    this.set_movies_state = this.set_movies_state.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMovie();\n  }\n\n  set_movies_state(movies) {\n    this.setState({\n      movies: movies\n    });\n  }\n\n  async fetchMovie() {\n    const query = `query {\n            fetchmovie{\n            savedmovie{\n                _id\n                movieid\n                poster_path\n                title\n                vote_average\n            }\n            }\n            }`;\n    const data = await graphQLFetch(query, this.props.token);\n    this.set_movies_state(data.fetchmovie.savedmovie); //        console.log(\"check backend\")\n    //        console.log(data.fetchmovie.savedmovie) //the data wanted\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        align: \"center\",\n        children: \"My watch list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-container\",\n        children: this.state.movies.length > 0 && this.state.movies.map(movie => /*#__PURE__*/_jsxDEV(Movie_small, { ...movie,\n          token: this.props.token,\n          updateWatchList: this.set_movies_state\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 87\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default WatchList;","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive/cori_5007_project_v1/5007_project/frontend/src/WatchList.js"],"names":["React","Movie_small","graphQLFetch","WatchList","Component","constructor","state","movies","set_movies_state","bind","componentDidMount","fetchMovie","setState","query","data","props","token","fetchmovie","savedmovie","render","length","map","movie","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,YAAR,QAA2B,0BAA3B;;;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAuC;AACnCC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAY;AAACC,MAAAA,MAAM,EAAC;AAAR,KAAZ;AACA,SAAKC,gBAAL,GAAuB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAvB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,UAAL;AAEH;;AAEDH,EAAAA,gBAAgB,CAACD,MAAD,EAAQ;AACpB,SAAKK,QAAL,CAAc;AAACL,MAAAA,MAAM,EAAEA;AAAT,KAAd;AACD;;AAEa,QAAVI,UAAU,GAAE;AACd,UAAME,KAAK,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAVQ;AAWA,UAAMC,IAAI,GAAG,MAAMZ,YAAY,CAACW,KAAD,EAAO,KAAKE,KAAL,CAAWC,KAAlB,CAA/B;AACA,SAAKR,gBAAL,CAAsBM,IAAI,CAACG,UAAL,CAAgBC,UAAtC,EAbc,CActB;AACA;AAEO;;AAEHC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA,8BACI;AAAI,QAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBACK,KAAKb,KAAL,CAAWC,MAAX,CAAkBa,MAAlB,GAA2B,CAA3B,IAAgC,KAAKd,KAAL,CAAWC,MAAX,CAAkBc,GAAlB,CAAuBC,KAAD,iBAAW,QAAC,WAAD,OAAgCA,KAAhC;AAAuC,UAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,KAAzD;AAAgE,UAAA,eAAe,EAAI,KAAKR;AAAxF,WAAkBc,KAAK,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,gBAAjC;AADrC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADJ;AAQH;;AA7CkC;;AAiDvC,eAAepB,SAAf","sourcesContent":["import React from \"react\";\r\nimport Movie_small from \"./Movie_small\";\r\nimport {graphQLFetch} from \"./helper/graphqlFetch.js\";\r\n\r\nclass WatchList extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state ={movies:[]}\r\n        this.set_movies_state =this.set_movies_state.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchMovie();\r\n\r\n    }\r\n\r\n    set_movies_state(movies){\r\n        this.setState({movies: movies})\r\n      }\r\n\r\n    async fetchMovie(){\r\n        const query = `query {\r\n            fetchmovie{\r\n            savedmovie{\r\n                _id\r\n                movieid\r\n                poster_path\r\n                title\r\n                vote_average\r\n            }\r\n            }\r\n            }`;\r\n        const data = await graphQLFetch(query,this.props.token);\r\n        this.set_movies_state(data.fetchmovie.savedmovie)\r\n//        console.log(\"check backend\")\r\n//        console.log(data.fetchmovie.savedmovie) //the data wanted\r\n\r\n      }\r\n\r\n    render() {\r\n      \r\n        return (\r\n            <>\r\n                <h1 align=\"center\">My watch list</h1>\r\n                <div className=\"movie-container\">\r\n                    {this.state.movies.length > 0 && this.state.movies.map((movie) => <Movie_small key={movie.id} {...movie} token={this.props.token} updateWatchList = {this.set_movies_state}/>)}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default WatchList;\r\n"]},"metadata":{},"sourceType":"module"}