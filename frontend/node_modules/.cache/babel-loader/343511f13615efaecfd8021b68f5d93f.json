{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\cori_5007_project_v1\\\\5007_project\\\\frontend\\\\src\\\\CreateAccount.js\";\nimport React from \"react\";\nimport { graphQLFetch } from \"./helper/graphqlFetch.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateAccount extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validateEmailAddress(email) {\n    let emailAddressError = \"\";\n    if (email.trim === \"\") emailAddressError = \"Email Address is required\";else if (!emailValidator.test(email)) emailAddressError = \"Email is not valid\";\n    return emailAddressError;\n  }\n\n  validatePassword(password) {\n    let passwordError = \"\";\n    if (password.trim === \"\") passwordError = \"Password is required\";else if (!passwordValidator.test(password)) passwordError = \"Password must contain at least 8 characters, 1 number, 1 upper and 1 lowercase!\";\n    return passwordError;\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    const form = document.forms.createAcc;\n    const email = form.username.value;\n    const password = form.password.value;\n    const emailValidator = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const passwordValidator = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/; //if (email.trim().length === 0 || password.trim().length === 0){\n    //    alert(\"Email address and Password fields are compulsary.\")\n    //    return;\n    //}\n\n    const errorMessage = this.validateEmailAddress(email, emailValidator);\n    console.log(errorMessage);\n    return;\n    const query = `mutation {\n        createUser(userInput: {email: \"${email}\", password: \"${password}\"})  {\n        _id\n        email\n        }\n        }`;\n    const data = await graphQLFetch(query);\n\n    if (data) {\n      alert(\"Account created. Please log in by filling in below.\");\n      this.props.jump();\n    } //console.log(data)\n\n\n    form.username.value = \"\";\n    form.password.value = \"\";\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-root\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formbg\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"signInTitle\",\n          children: \"Create your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          name: \"createAcc\",\n          id: \"stripe-login\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              placeholder: \"Your Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"password\",\n              placeholder: \"Your Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              name: \"submit\",\n              value: \"Continue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-link\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Already have account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"jump\",\n            onClick: this.props.jump,\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CreateAccount;","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive/cori_5007_project_v1/5007_project/frontend/src/CreateAccount.js"],"names":["React","graphQLFetch","CreateAccount","Component","constructor","handleSubmit","bind","validateEmailAddress","email","emailAddressError","trim","emailValidator","test","validatePassword","password","passwordError","passwordValidator","e","preventDefault","form","document","forms","createAcc","username","value","errorMessage","console","log","query","data","alert","props","jump","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {graphQLFetch} from \"./helper/graphqlFetch.js\";\r\n\r\nclass CreateAccount extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    validateEmailAddress(email) {\r\n        let emailAddressError = \"\";\r\n        if (email.trim === \"\") emailAddressError = \"Email Address is required\";\r\n        else if (!emailValidator.test(email))\r\n          emailAddressError = \"Email is not valid\";\r\n        return emailAddressError ;\r\n      }\r\n    \r\n      validatePassword(password) {\r\n        let passwordError = \"\";\r\n        if (password.trim === \"\") passwordError = \"Password is required\";\r\n        else if (!passwordValidator.test(password))\r\n          passwordError =\r\n            \"Password must contain at least 8 characters, 1 number, 1 upper and 1 lowercase!\";\r\n        return passwordError;\r\n      }\r\n\r\n    async handleSubmit(e){\r\n        e.preventDefault();\r\n        const form = document.forms.createAcc;\r\n        const email = form.username.value;\r\n        const password = form.password.value;\r\n        const emailValidator = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        const passwordValidator = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\r\n        //if (email.trim().length === 0 || password.trim().length === 0){\r\n        //    alert(\"Email address and Password fields are compulsary.\")\r\n        //    return;\r\n        //}\r\n        const errorMessage = this.validateEmailAddress(email,emailValidator)\r\n        console.log(errorMessage)\r\n        return\r\n        const query = `mutation {\r\n        createUser(userInput: {email: \"${email}\", password: \"${password}\"})  {\r\n        _id\r\n        email\r\n        }\r\n        }`;    \r\n        \r\n        const data = await graphQLFetch(query);\r\n        if (data){\r\n            alert(\"Account created. Please log in by filling in below.\");\r\n            this.props.jump()\r\n        }\r\n        //console.log(data)\r\n        form.username.value = \"\"; form.password.value = \"\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-root\">\r\n                <div className=\"formbg\">\r\n                    <span className=\"signInTitle\">Create your account</span>\r\n                    <form name=\"createAcc\" id=\"stripe-login\" onSubmit={this.handleSubmit}>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"email\">Name</label>\r\n                            <input type=\"text\" name=\"username\" placeholder=\"Your Email Address\"/>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"text\" name=\"password\" placeholder=\"Your Password\"/>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <input type=\"submit\" name=\"submit\" value=\"Continue\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"footer-link\">\r\n                    <span>Already have account? <button className=\"jump\" onClick={this.props.jump} >Log in</button></span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CreateAccount;"]},"metadata":{},"sourceType":"module"}